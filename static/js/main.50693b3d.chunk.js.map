{"version":3,"sources":["Components/Cards.jsx","Components/CardList.js","Components/Search.jsx","Components/Select.jsx","Components/Pagination.jsx","App.js","index.js"],"names":["Card","profile","this","props","firstName","FirstName","lastName","LastName","className","slice","UserName","Email","PhoneNumber","Latitude","Longitude","React","Component","CardList","testData","allData","paginated","sexFilter","genderProp","filter","f","Gender","searchedUser","paymentProp","PaymentMethod","user","toLocaleLowerCase","includes","searchProp","loading","map","MacAddress","Search","state","onChange","handleSearch","type","placeholder","Select","getUnique","arr","comp","e","i","final","indexOf","userData","gender","payment","genderChange","defaultValue","value","item","paymentChange","Pagination","postsPerPage","totalPosts","paginate","viewAll","pageNumbers","Math","ceil","push","number","onClick","href","App","initialData","useState","setGender","setPayment","search","setSearch","setUserData","setLoading","currentPage","setCurrentPage","setAllData","useEffect","a","Axios","get","res","data","records","profiles","getData","indexOfLastPost","indexOfFirstPost","currentPost","target","pageNumber","length","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50693b3d.chunk.js","sourcesContent":["import React from \"react\";\n\n//define the UI of individual cards with specified properties\n//props passed from CardList component\nclass Card extends React.Component {\n  render() {\n    const profile = this.props;\n    const firstName = profile.FirstName;\n    const lastName = profile.LastName;\n    return (\n      <div className=\"user-profile\">\n        <div className=\"thumbnail\">\n          {firstName.slice(0, 1)}/{lastName.slice(0, 1)}\n        </div>\n        <div className=\"info\">\n          <div className=\"name\">\n            üë§ {firstName} {lastName}\n          </div>\n          <div className=\"username\">@{profile.UserName}</div>\n          <div className=\"email\">üìß {profile.Email}</div>\n          <div className=\"phone\">üìû {profile.PhoneNumber}</div>\n          <div className=\"location\">\n            üìç {profile.Latitude}, {profile.Longitude}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Cards\";\n\nconst CardList = props => {\n  const allData = props.allData;\n  const testData = allData ? props.testData : props.paginated;\n  //filter through data using gender attribute\n  const sexFilter =\n    props.genderProp === \"\"\n      ? testData\n      : testData.filter(f => {\n          return f.Gender === props.genderProp;\n        });\n  //from already filtered data re-filter with payment type attribute\n  const paymentFilter =\n    props.paymentProp === \"\"\n      ? sexFilter\n      : sexFilter.filter(f => {\n          return f.PaymentMethod === props.paymentProp;\n        });\n  const searchedUser = paymentFilter.filter(user => {\n    return (\n      user.LastName.toLocaleLowerCase().includes(\n        props.searchProp.toLocaleLowerCase()\n      ) ||\n      user.FirstName.toLocaleLowerCase().includes(\n        props.searchProp.toLocaleLowerCase()\n      )\n    );\n  });\n  return props.loading ? (\n    <h2>loading dinn din loading...</h2>\n  ) : (\n    <div>\n      {/*map through fully filtered data  into Card component */}\n      {searchedUser.map(profile => (\n        <Card key={profile.MacAddress} {...profile} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          onChange={this.props.handleSearch}\n          type=\"text\"\n          placeholder=\"Search for Individual\"\n        ></input>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\n\nclass Select extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //go through an array and return unique values of desired attribute\n  getUnique = (arr, comp) => {\n    const unique = arr\n      .map(e => e[comp])\n      .map((e, i, final) => final.indexOf(e) === i && i)\n      .filter(e => arr[e])\n      .map(e => arr[e]);\n    return unique;\n  };\n\n  render() {\n    const userData = this.props.testData;\n    //use getunique functions to get unique genders available\n    const gender = this.getUnique(userData, \"Gender\");\n    //use getunique functions to get unique paymentMethods available\n    const payment = this.getUnique(userData, \"PaymentMethod\");\n    return (\n      <>\n        <select onChange={this.props.genderChange} defaultValue=\"\">\n          <option value=\"\">GENDER</option>\n          {gender.map(item => (\n            <option key={item.MacAddress} value={item.Gender}>\n              {item.Gender}\n            </option>\n          ))}\n        </select>\n        <select onChange={this.props.paymentChange} defaultValue=\"\">\n          <option value=\"\">PAYMENT METHOD</option>\n          {payment.map(item => (\n            <option key={item.MacAddress} value={item.PaymentMethod}>\n              {item.PaymentMethod}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  }\n}\n\nexport default Select;\n","import React from \"react\";\n\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate,\n  viewAll,\n  allData\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageNumbers.map(number => (\n          <li key={number} className=\"page-item\">\n            <a onClick={() => paginate(number)} href=\"#\" className=\"page-link\">\n              {number}\n            </a>\n          </li>\n        ))}\n        <li>\n          <a onClick={() => viewAll()} href=\"#\">\n            {allData ? \"view by page\" : \"view all\"}\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport CardList from \"./Components/CardList\";\nimport Search from \"./Components/Search\";\nimport Select from \"./Components/Select\";\nimport Pagination from \"./Components/Pagination\";\n\nfunction App({ initialData }) {\n  const [gender, setGender] = useState(\"\");\n  const [payment, setPayment] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(20);\n  const [allData, setAllData] = useState(false);\n\n  const handleGenderChange = e => {\n    setGender(e.target.value);\n  };\n  const handlePaymentChange = e => {\n    setPayment(e.target.value);\n  };\n\n  const searchHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const res = await Axios.get(\"https://api.enye.tech/v1/challenge/records\");\n      setUserData(res.data.records.profiles);\n      setLoading(false);\n    };\n    getData();\n  }, []);\n  //pagination logic\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPost = userData.slice(indexOfFirstPost, indexOfLastPost);\n\n  //change page\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const viewAll = () => {\n    setAllData(!allData);\n    console.log(allData);\n  };\n  return (\n    <div className={\"mainApp\"}>\n      <h1>Enye Frontend (1.1)</h1>\n      This is a sample stateful and server-side rendered React application.\n      <br />\n      <br />\n      <Select\n        genderChange={handleGenderChange}\n        paymentChange={handlePaymentChange}\n        testData={userData}\n      />\n      <Search handleSearch={searchHandler} />\n      <Pagination\n        paginate={paginate}\n        postsPerPage={postsPerPage}\n        totalPosts={userData.length}\n        viewAll={viewAll}\n        allData={allData}\n      />\n      <CardList\n        paymentProp={payment}\n        genderProp={gender}\n        searchProp={search}\n        testData={userData}\n        loading={loading}\n        paginated={currentPost}\n        allData={allData}\n      />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}